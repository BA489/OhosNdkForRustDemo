apply plugin: 'com.huawei.ohos.hap'
apply plugin: 'com.huawei.ohos.decctest'

//For instructions on signature configuration, see https://developer.harmonyos.com/cn/docs/documentation/doc-guides/ide_debug_device-0000001053822404#section1112183053510
ohos {
    compileSdkVersion 7
    defaultConfig {
        compatibleSdkVersion 4
    }
    buildTypes {
        release {
            proguardOpt {
                proguardEnabled false
                rulesFiles 'proguard-rules.pro'
            }
        }
    }

    externalNativeBuild {
        path "src/main/cpp/CMakeLists.txt"
        arguments "-v"
        abiFilters "arm64-v8a"
        cppFlags "-std=c++14"
    }
}


Properties properties = new Properties()
properties.load(project.rootProject.file("local.properties").newDataInputStream())

def ndk_dir = properties.getProperty("hwndk.dir", properties.getProperty("hwsdk.dir") + "/native/3.0.0.0")
println "projectDir = $projectDir"
println "ndk_dir = $ndk_dir"

for (build_type in ["Debug", "Release"]) {
    def taskName = "buildRustLibrary$build_type"
    task "$taskName"(type: Exec) {
        workingDir "$projectDir"
        if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
            commandLine 'cmd', '/c', "$projectDir/src/main/rust/build.bat", "$ndk_dir", "$build_type", "arm64-v8a"
        } else {
            commandLine 'bash', '-c', "$projectDir/src/main/rust/build.sh $build_type arm64-v8a"
        }
    }
}

tasks.whenTaskAdded { task ->
    // if ((task.name == 'preDebugBuild') || (task.name == 'preReleaseBuild')){
    //     task.dependsOn 'buildRustLibrary'
    // }

    // 针对不同的构建类型，创建不同的 task 依赖。
    if (task.name == 'preDebugBuild') {
        task.dependsOn 'buildRustLibraryDebug'
    } else if (task.name == 'preReleaseBuild') {
        task.dependsOn 'buildRustLibraryRelease'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.har'])
    testImplementation 'junit:junit:4.13.1'
    ohosTestImplementation 'com.huawei.ohos.testkit:runner:1.0.0.200'
}
decc {
    supportType = ['html', 'xml']
}
